security:
    encoders:
        App\Entity\User:
            algorithm:  bcrypt
            #cost: 12
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_database:
            entity:
                class: App\Entity\User
                property: email
        #users_in_memory:
        #    memory:
         #       users:
          #          zita:
           #             password: zitazita
            #            roles: ROLE_ADMIN

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            provider: in_database


            form_login:
                login_path: security_login
                check_path: security_login

            logout:
                path: security_logout
                target: /

            # where to redirect after logout
            # target: app_any_route
          #provider: users_in_memory


            # activate different ways to authenticate
            #form_login:
               # check_path: login
            #logout:
                #path: /logout
                #target: /

            #http_basic: true
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
         #- { path: ^/profile, roles: ROLE_USER }



